An optimal heuristic is one where the heuristic is G ̂_t (s_t;π_T )≈G_t (s_t;π_T ). This minimizes underestimation of the path so less time is spent exploration other possible paths and mainly follows the optimal one. Depending on what map/grid is used and the restrictions of movement on the robot, each scenario will have an optimal heuristic. Therefore in situations where the robot can move in any direction and the cost of moving to any neighbouring node is equal, the Euclidean distance is optimal as it is the absolute distance between 2 nodes on a grid. However it becomes less efficient in high dimensions cost to move to a neighbouring node is less than the absolute distance for example moving onto a conveyor belt. Therefore this heuristic can be used in practice if the robot is able to turn to any direction on the spot and traverse an even 2D plane. 
As we are operating on a grid system, the Euclidean distance in most cases will produce a cost shorter than the robot can possibly move. So there are a few other heuristics, the Manhattan distance or Octile distance heuristics. Manhattan distance is ideal for a square grid where the robot can only move in 4 directions, the Octile direction is ideal for a square grid where the robot can move in 8 directions.
